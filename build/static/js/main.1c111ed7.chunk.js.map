{"version":3,"sources":["containers/_layout/Topbar/topbarActions.js","assets/images/logo.png","containers/_app/App.jsx","assets/images/bg.jpg","consts.js","shared/commons/PrivateRoute.js","containers/_layout/Topbar/styles.js","containers/_layout/Topbar/index.jsx","containers/_layout/Sidebar/sitemap.js","containers/_layout/Sidebar/styles.js","containers/_layout/Sidebar/index.jsx","containers/_layout/index.jsx","containers/_layout/styles.js","containers/login/loginForm/validate.js","shared/form/DefaultInput.jsx","containers/login/styles.js","containers/login/loginForm/index.jsx","containers/login/index.jsx","containers/home/index.jsx","shared/styles/index.js","services.js","containers/grupos/form/validate.js","shared/components/Content.js","containers/grupos/form/index.jsx","shared/components/dataTable/index.jsx","containers/grupos/index.jsx","containers/publicadores/form/validate.js","shared/form/DatePickerSimple.jsx","shared/form/Select.jsx","containers/publicadores/form/index.jsx","enums.js","containers/publicadores/index.jsx","containers/registros/form/validate.js","containers/registros/form/index.jsx","containers/registros/index.jsx","containers/usuarios/form/validate.js","containers/usuarios/form/index.jsx","containers/usuarios/index.jsx","containers/_app/Routes.jsx","serviceWorker.js","containers/_layout/Topbar/topReducers.js","containers/_app/reducers.js","index.js"],"names":["TOGGLE_COLLAPSED","toggleCollapseMenu","type","module","exports","hot","PrivateRoute","Component","component","rest","render","props","localStorage","getItem","consts","clear","to","pathname","state","from","location","Search","Header","Image","styled","TopbarLight","AvatarName","IconDown","IconMenuFold","AvatarWrapper","SectionFlex","menu","Item","onClick","window","reload","key","connect","dispatch","bindActionCreators","useState","collapsed","setCollapsed","className","src","Logo","alt","overlay","trigger","size","icon","JSON","parse","name","resource","title","route","param","SubMenu","MenuItem","IconSidebar","Sider","collapse","topbar","withRouter","split","width","theme","collapsible","defaultSelectedKeys","length","mode","style","marginTop","borderRight","sitemap","map","item","MainWrapper","padding","children","MainLayout","Schema","Yup","shape","email","required","password","TextArea","InputText","colorIcon","field","placeholder","prefix","color","InputPassword","Password","InputTextArea","rows","InputNumber","handleChange","min","onChange","value","Text","StyleRow","ColImage","Background","ColLight","ButtonOrange","TextHoverOrange","FormItemFlex","HeaderForm","HandleLoginForm","withFormik","mapPropsToValues","validationSchema","SchemaValidate","handleSubmit","values","a","history","axios","post","catch","e","notification","warning","top","duration","message","description","response","data","token","setItem","stringify","user","push","displayName","errors","touched","onKeyDown","label","validateStatus","underline","htmlType","block","Login","span","Home","TableIcon","api","create","baseURL","headers","interceptors","request","use","config","Authorization","error","Promise","reject","status","nome","Content","ContentLight","ContentTransparent","confirm","HandleFormGrupos","responsavel","grupo","handleVisible","resetForm","content","okText","cancelText","onOk","method","idGrupo","success","salvarGrupo","onCancel","setValues","visible","loading","setLoading","closeDrawer","useEffect","get","buscarGrupo","destroyOnClose","placement","closable","onClose","onBack","spinning","layout","gutter","xs","sm","marginBottom","DataTable","recurso","columns","handleReload","dataColumns","setDataColumns","setData","pagination","setPagination","setSearchText","searchInput","useRef","buscarRecurso","filter","params","queryParams","limit","results","offset","page","sortField","sortOrder","filters","pages","total","parseInt","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","clearFilters","ref","target","onPressEnter","handleSearch","display","marginRight","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","current","select","cols","col","hidden","filterSearch","renderEmpty","rowKey","id","dataSource","sorter","pager","pageSize","order","scroll","x","tableLayout","Grupos","setReload","cadastroVisible","setCadastroVisible","setIdGrupo","_id","fixed","twoToneColor","delete","deletar","r","data_nascimentoM","id_grupo","MonthPicker","DatePickerSimple","handleBlur","locale","date","dateString","dt","format","onBlur","form","setFieldTouched","DatePickerMonth","Option","SelectInput","options","showSearch","optionFilterProp","filterOption","input","option","indexOf","index","HandleFormPublicadores","sexo","data_nascimento","moment","data_batismo","data_batismoM","privilegio","publicador","idPublicador","salvarPublicador","setFieldValue","grupos","setGrupos","resGrupos","grp","newValues","buscarPublicador","getGrupos","Group","buttonStyle","Button","dateM","Select","TipoMascara","regex","replace","Publicadores","setIdPublicador","v","mesAnoM","horas","publicacoes","videos","revisitas","estudos","HandleFormRegistros","mesAno","obs","registro","idRegistro","salvarRegistro","publicadores","setPublicadores","resPublicadores","pub","buscarRegistro","getPublicadores","maxLength","Registros","setIdRegistro","HandleFormUsuarios","usuario","idUser","salvarUsuario","buscarUsuario","Usuarios","setIdUser","Pages","exact","path","wrappedRoutes","Routes","Boolean","hostname","match","INITIAL_STATE","rootReducer","combineReducers","action","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","applyMiddleware","multi","thunk","createStore","reducers","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c111ed7.chunk.js","sourcesContent":["export const TOGGLE_COLLAPSED = 'TOGGLE_COLLAPSED'\r\n\r\nexport function toggleCollapseMenu() {\r\n    return { type: TOGGLE_COLLAPSED }\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.d3cac432.png\";","import React from 'react'\r\n\r\nimport { hot } from 'react-hot-loader'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport Routes from './Routes'\r\n\r\nconst App = () => (\r\n    <BrowserRouter>\r\n        <Routes />\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default hot(module)(App)\r\n","module.exports = __webpack_public_path__ + \"static/media/bg.e654bf1a.jpg\";","export default {\r\n    BASE_URL: 'http://publicadores.tjcampestre.com.br/api',\r\n    USER_TOKEN: 'user_token',\r\n    USER_DATA: 'user_data'\r\n}","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport consts from '../../consts'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest}\r\n        render={props => {\r\n            if (localStorage.getItem(consts.USER_TOKEN)) {\r\n                return <Component {...props} />\r\n            } else {\r\n                localStorage.clear()\r\n                return <Redirect\r\n                    to={{\r\n                        pathname: \"/login\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            }\r\n        }\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute","import styled from 'styled-components'\r\nimport { Layout, Badge, Icon, Input } from 'antd'\r\n\r\nconst { Search } = Input\r\nconst { Header } = Layout\r\n\r\nexport const Image = styled('img')`\r\n    width: 50px\r\n`\r\n\r\nexport const TopbarLight = styled(Header)`\r\n    background-color: #ffffff;\r\n    -webkit-box-shadow: 0px 0px 20px 0px rgba(82,82,82,0.15);\r\n    -moz-box-shadow: 0px 0px 20px 0px rgba(82,82,82,0.15);\r\n    box-shadow: 0px 0px 20px 0px rgba(82,82,82,0.15);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    position: fixed;\r\n    z-index: 1;\r\n    width: 100%;\r\n`\r\n\r\nexport const BadgeNotify = styled(Badge)`\r\n    margin-right: 1.5em;\r\n`\r\n\r\nexport const AvatarName = styled(Badge)`\r\n    margin: 0 1em;\r\n    font-size: 14px;\r\n    color: rgba(0, 0, 0, 0.85);\r\n    font-weight: 500;\r\n`\r\n\r\nexport const IconDown = styled(Icon)`\r\n    font-size: 12px;\r\n`\r\nexport const IconMenuFold = styled(Icon)`\r\n    font-size: 18px;\r\n    margin-right: 2em\r\n`\r\n\r\nexport const AvatarWrapper = styled('span')`\r\n    height: 60px;\r\n    margin-left: 1em;\r\n    display: inline-flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const SectionFlex = styled('section')`\r\n    display: flex;\r\n    align-items: center\r\n`\r\n\r\nexport const SearchBox = styled(Search)`\r\n    width: 500px;\r\n\r\n    input{\r\n        &:hover {\r\n            border-color: rgba(252, 117, 12, 0.5) !important;\r\n        }\r\n\r\n        &:focus {\r\n            border-color: rgba(252, 117, 12, 0.5) !important;\r\n            box-shadow: 0 0 0 2px rgba(252, 117, 12, 0.1);\r\n        }\r\n    }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { toggleCollapseMenu } from './topbarActions'\r\nimport consts from '../../../consts'\r\n\r\nimport { Avatar, Menu, Dropdown, Icon } from 'antd'\r\nimport {\r\n    Image,\r\n    TopbarLight,\r\n    BadgeNotify,\r\n    AvatarName,\r\n    AvatarWrapper,\r\n    SectionFlex,\r\n    IconDown,\r\n    IconMenuFold,\r\n    SearchBox\r\n} from './styles'\r\n\r\nimport Logo from '../../../assets/images/logo.png'\r\n\r\nconst menu = (\r\n    <Menu>\r\n        <Menu.Item onClick={() => { localStorage.clear(); window.location.reload(); }} key=\"3\"><Icon type=\"poweroff\" />Sair da aplicação</Menu.Item>\r\n    </Menu>\r\n)\r\n\r\nconst Topbar = ({ toggleCollapseMenu }) => {\r\n\r\n    const [collapsed, setCollapsed] = useState(false)\r\n\r\n    function toggleCollapsed() {\r\n        setCollapsed(!collapsed)\r\n        toggleCollapseMenu()\r\n    }\r\n\r\n    return (\r\n        <TopbarLight className=\"Header\">\r\n            <SectionFlex>\r\n                <IconMenuFold type={collapsed ? 'menu-unfold' : 'menu-fold'} onClick={() => toggleCollapsed()} />\r\n\r\n                <Image src={Logo} alt=\"Logo Azymus\" />\r\n                <span>G-Publicadores</span>\r\n            </SectionFlex>\r\n\r\n            <SectionFlex>\r\n                <Dropdown overlay={menu} trigger={['click']}>\r\n                    <AvatarWrapper>\r\n                        <Avatar size=\"large\" icon=\"user\" />\r\n                        <AvatarName>{JSON.parse(localStorage.getItem(consts.USER_DATA)).name}</AvatarName>\r\n                        <IconDown type=\"down\" />\r\n                    </AvatarWrapper>\r\n                </Dropdown>\r\n            </SectionFlex>\r\n        </TopbarLight>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({toggleCollapseMenu}, dispatch)\r\n\r\nexport default connect(null, mapDispatchToProps)(Topbar)\r\n","export default [\n    // {\n    //     resource: \"dash\",\n    //     title: \"Home\",\n    //     icon: \"home\",\n    //     route: \"/\",\n    //     param: \"\"\n    // },\n    {\n        resource: \"grupos\",\n        title: \"Grupos\",\n        icon: \"team\",\n        route: \"/grupos\",\n        param: \"\"\n    },\n    {\n        resource: \"publicadores\",\n        title: \"Publicadores\",\n        icon: \"user\",\n        route: \"/publicadores\",\n        param: \"\"\n    },\n    {\n        resource: \"registros\",\n        title: \"Registros\",\n        icon: \"solution\",\n        route: \"/registros\",\n        param: \"\"\n    },\n    {\n        resource: \"usuarios\",\n        title: \"Usuários\",\n        icon: \"safety\",\n        route: \"/usuarios\",\n        param: \"\"\n    }\n]","import styled from 'styled-components'\r\n\r\nimport { Menu, Icon } from 'antd'\r\n\r\nconst { SubMenu } = Menu\r\n\r\n\r\nexport const MenuItem = styled(Menu.Item)`\r\n    &&.ant-menu-item-selected {\r\n        background-color: #c1ddf4;\r\n        color: #2767b0;\r\n    }\r\n\r\n    &&.ant-menu-item-selected::after {\r\n        border-right: 3px solid #2767b0 !important;\r\n    }\r\n\r\n    &&.ant-menu-item:hover {\r\n        color: #2767b0;\r\n    }\r\n\r\n    &&.ant-menu-item:active {\r\n        background-color: #c1ddf4;\r\n    }\r\n\r\n    &&.ant-menu-item-selected > a, .ant-menu-item-selected > a:hover {\r\n        color: #2767b0;\r\n    }\r\n\r\n    &&.ant-menu-item > a:hover {\r\n        color: #2767b0;\r\n    }\r\n`\r\n\r\nexport const SubMenuItem = styled(SubMenu)`\r\n    &&.ant-menu-submenu-selected {\r\n        color: #2767b0;\r\n    }\r\n\r\n    &&.ant-menu-item:hover,\r\n    .ant-menu-item-active,\r\n    .ant-menu:not(.ant-menu-inline) .ant-menu-submenu-open,\r\n    .ant-menu-submenu-active,\r\n    .ant-menu-submenu-title:hover {\r\n        color: #2767b0;\r\n    }\r\n\r\n    &&.ant-menu-submenu-inline > .ant-menu-submenu-title:hover .ant-menu-submenu-arrow::after,\r\n    &&.ant-menu-submenu-inline > .ant-menu-submenu-title:hover .ant-menu-submenu-arrow::before {\r\n        background: linear-gradient(to right, #2767b0, #2767b0);\r\n    }\r\n\r\n`\r\n\r\nexport const IconSidebar = styled(Icon)`\r\n    && {\r\n        font-size: 18px;\r\n        margin-right: 1em;\r\n    }\r\n`\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport sitemap from './sitemap';\r\n\r\nimport { Layout, Menu } from 'antd'\r\nimport { MenuItem, IconSidebar } from './styles'\r\n\r\nconst { Sider } = Layout\r\n\r\nconst Sidebar = function ({ collapse, location}) {\r\n    const resource = location.pathname.split('/')[1];\r\n    return (\r\n        <Sider width={250} theme=\"light\" trigger={null} collapsible collapsed={collapse}>\r\n            <Menu\r\n                defaultSelectedKeys={[resource.length === 0 ? 'dash' : resource]}\r\n                mode=\"inline\"\r\n                theme=\"light\"\r\n                style={{ marginTop: '80px', borderRight: 0 }} >\r\n\r\n                {sitemap.map((item) => (\r\n                    <MenuItem key={item.resource}>\r\n                        <Link to={item.route}>\r\n                            <IconSidebar type={item.icon} />\r\n                            <span>{item.title}</span>\r\n                        </Link>\r\n                    </MenuItem>)\r\n                )}\r\n            </Menu>\r\n        </Sider>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({ collapse: state.topbar.collapse })\r\n\r\nexport default connect(mapStateToProps)(withRouter(Sidebar))\r\n","import React from 'react'\r\n\r\nimport Topbar from './Topbar'\r\nimport Sidebar from './Sidebar'\r\nimport { Layout } from 'antd'\r\n\r\nconst MainWrapper = (props) => {\r\n    return (\r\n        <>\r\n            <Topbar />\r\n            <Layout>\r\n                <Sidebar />\r\n                <Layout style={{ padding: '0 24px 24px' }}>\r\n                    {props.children}\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\nexport default MainWrapper\r\n","import styled from 'styled-components'\r\n\r\nimport { Icon, Layout } from 'antd'\r\n\r\nexport const IconTrigger = styled(Icon)`\r\n    font-size: 18px;\r\n    line-height: 64px;\r\n    padding: 0 24px;\r\n    cursor: pointer;\r\n    transition: color 0.3s;\r\n`\r\n\r\nexport const Image = styled('img')`\r\n    width: 120px;\r\n`\r\n\r\nexport const MainLayout = styled(Layout)`\r\n    min-height: 100%;\r\n    height: 100%;\r\n`","import * as Yup from 'yup'\r\n\r\nconst Schema = Yup.object().shape({\r\n    email: Yup.string().required('Informe seu email!'),\r\n    password: Yup.string().required('Informe sua senha!')\r\n})\r\n\r\nexport default Schema","import React from 'react'\r\nimport { Icon, Input, InputNumber as NumberInput } from 'antd'\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport const InputText = ({ colorIcon, field, icon, placeholder, size, type, ...props }) => (\r\n    <Input\r\n        {...field}\r\n        {...props}\r\n        prefix={icon &&<Icon type={icon} style={{ color: colorIcon ? colorIcon : 'rgba(0,0,0,.25)' }} />}\r\n        placeholder={placeholder}\r\n        type={type ? type : 'text'}\r\n        size={size ? size : 'default'}\r\n    />\r\n)\r\n\r\nexport const InputPassword = ({ colorIcon, field, icon, placeholder, size, type, ...props }) => (\r\n    <Input.Password\r\n        {...field}\r\n        {...props}\r\n        prefix={icon &&<Icon type={icon} style={{ color: colorIcon ? colorIcon : 'rgba(0,0,0,.25)' }} />}\r\n        placeholder={placeholder}\r\n        type={type ? type : 'text'}\r\n        size={size ? size : ''}\r\n    />\r\n)\r\n\r\nexport const InputTextArea = ({ field, placeholder, rows = 2, ...props }) => (\r\n    <TextArea\r\n        {...field}\r\n        {...props}\r\n        rows={rows}\r\n        placeholder={placeholder}\r\n    />\r\n)\r\n\r\nexport const InputNumber = ({ field, handleChange, ...props }) => (\r\n    <NumberInput\r\n        {...field}\r\n        {...props}\r\n        min={0}\r\n        onChange={value => handleChange(value)}\r\n        style={{ width: '100%' }}\r\n    />\r\n)","import styled from 'styled-components'\r\nimport { Row, Col, Button, Typography } from 'antd'\r\nimport Background from '../../assets/images/bg.jpg'\r\n\r\nconst { Text } = Typography\r\n\r\nexport const StyleRow = styled(Row)`\r\n    height: 100%\r\n`\r\n\r\nexport const ColImage = styled(Col)`\r\n    background-image: url(${Background});\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    background-size: cover;\r\n`\r\n\r\nexport const ColLight = styled(Col)`\r\n    justify-content: space-around !important;\r\n    display: flex !important;\r\n    flex-direction: column !important;\r\n    padding: 3em !important;\r\n`\r\n\r\nexport const ButtonOrange = styled(Button)`\r\n    background-color: #2767b0;\r\n    border-color: #2767b0;\r\n\r\n    &:hover {\r\n        background-color: #c1ddf4;\r\n        border-color: #c1ddf4;\r\n    }\r\n\r\n    &:focus, &:active {\r\n        background-color: #c1ddf4;\r\n        border-color: #c1ddf4;\r\n    }\r\n`\r\nexport const TextHoverOrange = styled(Text)`\r\n    &:hover {\r\n        cursor: pointer;\r\n        color: #2767b0\r\n    }\r\n`\r\n\r\nexport const FormItemFlex = styled('div')`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 48px;\r\n\r\n    .ant-checkbox-wrapper:hover .ant-checkbox-inner,\r\n    .ant-checkbox:hover .ant-checkbox-inner,\r\n    .ant-checkbox-input:focus + .ant-checkbox-inner {\r\n        border-color: #2767b0!important;\r\n    }\r\n\r\n    .ant-checkbox-checked .ant-checkbox-inner {\r\n        background-color: #2767b0;\r\n        border-color: #2767b0;\r\n    }\r\n`\r\n\r\nexport const HeaderForm = styled('div')`\r\n    line-height: 15px;\r\n\r\n    h1 {\r\n        font-weight: 700\r\n    }\r\n`\r\n\r\nexport const Image = styled('img')`\r\n    align-self: flex-start;\r\n    width: 120px;\r\n`","import React from 'react'\r\nimport axios from 'axios'\r\nimport { withRouter } from 'react-router-dom'\r\nimport SchemaValidate from './validate'\r\nimport consts from '../../../consts'\r\n\r\nimport { Form, Icon, notification } from 'antd'\r\nimport { withFormik, Field, Form as FormFormik } from 'formik'\r\nimport { InputText, InputPassword } from '../../../shared/form/DefaultInput'\r\nimport { ButtonOrange, TextHoverOrange, FormItemFlex } from '../styles'\r\n\r\nconst LoginForm = ({handleSubmit, errors, touched}) => {\r\n    return(\r\n    <FormFormik className=\"login-form\" onKeyDown={e => { if (e.key === 'Enter') { handleSubmit(); } }}>\r\n        <Form.Item label=\"Email\"\r\n            validateStatus={(errors.email && touched.email) ? 'error' : ''}>\r\n            <Field\r\n                component={InputText}\r\n                icon='user'\r\n                name='email'\r\n                placeholder='Ex: seuemail@provedor.com'\r\n                size='large'\r\n            />\r\n            {(errors.email && touched.email) && <span style={{ color: \"red\" }}>{errors.email}</span>}\r\n        </Form.Item>\r\n        <Form.Item label=\"Senha\"\r\n            validateStatus={(errors.password && touched.password) ? 'error' : ''}>\r\n            <Field\r\n                component={InputPassword}\r\n                icon='lock'\r\n                name='password'\r\n                placeholder='Sua senha mais segura'\r\n                type='password'\r\n                size='large'\r\n            />\r\n            {(errors.password && touched.password) && <span style={{ color: \"red\" }}>{errors.password}</span>}\r\n        </Form.Item>\r\n        <FormItemFlex>\r\n            <TextHoverOrange underline>Esqueci minha senha</TextHoverOrange>\r\n        </FormItemFlex>\r\n        <ButtonOrange type=\"primary\" htmlType=\"submit\" size=\"large\" className=\"login-form-button\" block>Entrar na plataforma <Icon type=\"arrow-right\" /></ButtonOrange>\r\n    </FormFormik>\r\n)}\r\n\r\nconst HandleLoginForm = withFormik({\r\n    mapPropsToValues: () => ({ email: '', password: '' }),\r\n\r\n    validationSchema: SchemaValidate,\r\n\r\n    handleSubmit: async (values, { props }) => {\r\n        const { history } = props\r\n\r\n        const response = await axios.post(`${consts.BASE_URL}/users/authenticate`, values).catch((e) => {\r\n            notification.warning({\r\n                placeholder: \"topRight\",\r\n                top: 50,\r\n                duration: 3,\r\n                message: \"Erro\",\r\n                description: e.response.data.message\r\n            });\r\n        })\r\n        if (response) {\r\n            const token = response.data.token\r\n\r\n            localStorage.setItem(consts.USER_TOKEN, token)\r\n            localStorage.setItem(consts.USER_DATA, JSON.stringify(response.data.user))\r\n\r\n            history.push('/')\r\n        }\r\n    },\r\n\r\n    displayName: 'LoginForm'\r\n})(LoginForm)\r\n\r\nexport default withRouter(HandleLoginForm)","import React from 'react'\r\nimport LoginForm from './loginForm'\r\nimport { Redirect } from 'react-router-dom'\r\nimport consts from '../../consts'\r\n\r\nimport { StyleRow, ColImage, ColLight, Image, HeaderForm } from './styles'\r\n\r\nimport Logo from '../../assets/images/logo.png'\r\n\r\nconst Login = ({location}) => {\r\n    const { from } = location.state || { from: { pathname: \"/\" } }\r\n\r\n    if (localStorage.getItem(consts.USER_TOKEN)) {\r\n        return <Redirect to={from} />\r\n    } else {\r\n        return (\r\n            <StyleRow type=\"flex\">\r\n                <ColImage span={16}></ColImage>\r\n                <ColLight span={8}>\r\n                    <Image src={Logo} alt=\"Azymus\" />\r\n                    <HeaderForm>\r\n                        <h1>G-Publicadores</h1>\r\n                        <p>Acesse sua conta.</p>\r\n                    </HeaderForm>\r\n                    <LoginForm />\r\n                </ColLight>\r\n            </StyleRow>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return (\r\n        // <MainLayout>\r\n        //     <Topbar />\r\n        //     <Layout>\r\n        //         <Sidebar />\r\n        //     </Layout>\r\n        // </MainLayout>\r\n        <h1>Home | Dashboard</h1>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n","import styled from 'styled-components'\nimport { Icon } from 'antd'\n\nexport const Header =  styled('header')`\n    display: flex;\n    align-items: flex-end;\n    justify-content: space-between;\n    margin-bottom: 3em;\n\n    p {\n        margin-bottom: 0\n    }\n`\n\nexport const Title =  styled('h1')`\n    font-size: 25px;\n    margin-bottom: 0;\n    color: #42464c;\n`\n\nexport const TitleForm = styled('h1')`\n    font-size: 18px;\n    font-weight: 600;\n    margin: 1.5em 0 1em;\n`\n\nexport const TitleChildArray = styled('h2')`\n    font-size: 16px;\n    margin-bottom: 0;\n`\n\nexport const TableIcon = styled(Icon)`\n    font-size: 16px;\n    color: #2a2a2a;\n`\n\nexport const StepsContent = styled('div')`\n    margin-top: 30px;\n    border-radius: 6px;\n    min-height: 200px;\n    padding: 2em 2em 0 2em;\n`\n\nexport const StepsAction = styled('div')`\n    margin-top: 24px;\n`","import axios from 'axios'\r\nimport consts from './consts'\r\nimport { message } from 'antd'\r\n\r\nconst api = axios.create({\r\n    baseURL: consts.BASE_URL,\r\n    headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json;charset=UTF-8',\r\n    }\r\n})\r\n\r\napi.interceptors.request.use(\r\n    config => {\r\n        if (config.baseURL === consts.BASE_URL && !config.headers.Authorization) {\r\n            const token = localStorage.getItem(consts.USER_TOKEN)\r\n  \r\n            if (token) {\r\n                config.headers.Authorization = `Bearer ${token}`;\r\n            }\r\n      }\r\n  \r\n      return config;\r\n    },\r\n    error => Promise.reject(error)\r\n);\r\n\r\napi.interceptors.response.use(function (response) {\r\n    return response;\r\n}, function (e) {\r\n    switch (e.response.status) {\r\n        case 400:\r\n            message.warning(e.response.data.message);\r\n            break\r\n        case 401:\r\n        case 403:\r\n            localStorage.clear();\r\n            break;\r\n        case 409:\r\n            message.warning(e.response.data.message);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(e);\r\n});\r\n\r\nexport default api","import * as Yup from 'yup'\r\n\r\nconst Schema = Yup.object().shape({\r\n    nome: Yup.string().required('Informe o nome do grupo!')\r\n})\r\n\r\nexport default Schema","import styled from 'styled-components'\r\n\r\nimport { Layout } from 'antd'\r\n\r\nconst { Content } = Layout\r\n\r\nexport const ContentLight = styled(Content)`\r\n    background: #fff;\r\n    padding: 18px;\r\n    margin: 0;\r\n    min-height: auto\r\n`\r\n\r\nexport const ContentTransparent = styled(Content)`\r\n    padding: 24px;\r\n    margin: 0;\r\n    margin-top: 90px;\r\n    min-height: auto;\r\n`","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport api from '../../../services'\n\nimport { Row, Col, Button, Icon, Form, PageHeader, Spin, Modal, Drawer, message } from 'antd'\nimport { withFormik, Field, Form as FormFormik } from 'formik'\nimport { Header } from '../../../shared/styles'\nimport SchemaValidate from './validate'\nimport { ContentLight } from '../../../shared/components/Content'\nimport { InputText } from '../../../shared/form/DefaultInput'\n\nconst { confirm } = Modal\n\nconst FormGrupos = ({ resetForm, setValues, errors, touched, handleVisible, visible, grupo }) => {\n\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        async function buscarGrupo() {\n            if (grupo) {\n                setLoading(true)\n                handleVisible(true, false, grupo)\n\n                const response = await api.get(`grupos/${grupo}`);\n\n                if (response) {\n                    setValues({ nome: response.data.nome, responsavel: response.data.responsavel })\n                }\n                setLoading(false)\n            }\n        }\n\n        buscarGrupo();\n    }, [grupo])\n\n    function closeDrawer(checkClose = true) {\n        if (checkClose) {\n            confirm({\n                title: 'Confirmar',\n                content: `Você perderá as alterações. Deseja realmente fechar?`,\n                okText: \"Sim\",\n                cancelText: \"Não\",\n                onOk() {\n                    resetForm()\n                    handleVisible(false, false)\n                },\n                onCancel() { }\n            })\n        } else {\n            resetForm()\n            handleVisible(false, false)\n        }\n    }\n\n    return (\n        <Drawer\n            destroyOnClose={true}\n            width=\"45%\"\n            placement='right'\n            closable={false}\n            onClose={() => closeDrawer()}\n            visible={visible}>\n            <Header>\n                <PageHeader style={{ padding: 0 }} onBack={() => closeDrawer(false)} title=\"Cadastro de Grupos\" />\n            </Header>\n            <ContentLight>\n                <Spin spinning={loading}>\n                    <FormFormik layout=\"vertical\">\n                        <Row gutter={30}>\n                            <Col xs={24} sm={24}>\n                                <Form.Item label=\"Nome\"\n                                    validateStatus={(errors.nome && touched.nome) ? 'error' : ''}>\n                                    <Field\n                                        component={InputText}\n                                        name='nome'\n                                        placeholder='Nome'\n                                    />\n                                    {(errors.nome && touched.nome) && <span style={{ color: \"red\" }}>{errors.nome}</span>}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row gutter={30}>\n                            <Col xs={24} sm={24}>\n                                <Form.Item label=\"Responsável\"\n                                    validateStatus={(errors.responsavel && touched.responsavel) ? 'error' : ''}>\n                                    <Field\n                                        component={InputText}\n                                        name='responsavel'\n                                        placeholder='Responsável'\n                                    />\n                                    {(errors.responsavel && touched.responsavel) && <span style={{ color: \"red\" }}>{errors.responsavel}</span>}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col xs={24} sm={12}>\n                                <Form.Item style={{ marginBottom: 0 }}>\n                                    <Button type=\"primary\" htmlType=\"submit\">Salvar Grupo <Icon type=\"arrow-right\" /></Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </FormFormik>\n                </Spin>\n            </ContentLight>\n        </Drawer>\n    )\n}\n\nconst HandleFormGrupos = withFormik({\n    mapPropsToValues: () => ({ nome: '', responsavel: '' }),\n    validationSchema: SchemaValidate,\n\n    handleSubmit: async (values, { props: { grupo, handleVisible }, resetForm }) => {\n        confirm({\n            title: 'Confirmar',\n            content: `Deseja realmente salvar ${!grupo ? \"este\" : \"a edição deste\"} Grupo?`,\n            okText: \"Sim\",\n            cancelText: \"Não\",\n            onOk() {\n                async function salvarGrupo() {\n                    const idGrupo = grupo ? grupo : '';\n                    const method = idGrupo ? \"put\" : \"post\"\n\n                    const response = await api[method](`grupos/${idGrupo}`, values)\n\n                    if (response) {\n                        message.success(`Grupo ${method === 'post' ? 'criado' : 'alterado'} com sucesso!`);\n\n                        resetForm()\n                        handleVisible(false, true)\n                    }\n                }\n\n                salvarGrupo()\n            }, onCancel() { }\n        });\n    },\n    displayName: 'GruposForm'\n})(FormGrupos)\n\nexport default withRouter(HandleFormGrupos)\n","import React, { useEffect, useState, useRef } from 'react'\nimport api from '../../../services'\n\nimport { Table, Input, Button, Icon, ConfigProvider, Empty } from 'antd'\n\nconst DataTable = ({ recurso, columns, reload, handleReload }) => {\n\n    const [dataColumns, setDataColumns] = useState(columns)\n    const [data, setData] = useState([])\n    const [pagination, setPagination] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [searchText, setSearchText] = useState('')\n    const searchInput = useRef(null)\n\n    async function buscarRecurso(params = {}) {\n        setLoading(true)\n\n        let queryParams = ''\n\n        const limit = params.results || 10\n        const offset = (params.page - 1) * limit || 0\n        const sortField = params.sortField\n        const sortOrder = params.sortOrder\n        const filters = params.filters\n\n        for (let filter in filters) {\n            queryParams += `&${filter}[lk]=${filters[filter]}`\n        }\n\n        if (sortField && sortOrder)\n            queryParams = `${queryParams}&order[${sortOrder === 'ascend' ? 'asc' : 'desc'}]=${sortField}`\n\n        const response = await api.get(`${recurso}?limit=${limit}&offset=${offset}${queryParams}`)\n\n        if (response) {\n            const pages = { ...pagination }\n\n            pages.total = parseInt(response.headers['x-total-count'])\n\n            setLoading(false)\n            setData(response.data)\n            setPagination(pages)\n        }\n    }\n\n    function handleTableChange(pagination, filters, sorter) {\n        const pager = { pagination }\n        pager.current = pagination.current\n\n        setPagination(pager)\n\n        buscarRecurso({\n            results: pagination.pageSize,\n            page: pagination.current,\n            sortField: sorter.field,\n            sortOrder: sorter.order,\n            filters: filters\n        })\n    }\n\n    function getColumnSearchProps(dataIndex) {\n        return {\n            filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n                <div style={{ padding: 8 }}>\n                    <Input\n                        ref={searchInput}\n                        placeholder={`Buscar ${dataIndex}`}\n                        value={selectedKeys[0]}\n                        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                        onPressEnter={() => handleSearch(selectedKeys, confirm)}\n                        style={{ width: 188, marginBottom: 8, display: 'block' }}\n                    />\n                    <Button\n                        type=\"primary\"\n                        onClick={() => handleSearch(selectedKeys, confirm)}\n                        icon=\"search\"\n                        size=\"small\"\n                        style={{ width: 90, marginRight: 8 }}>Buscar</Button>\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>Limpar</Button>\n                </div>\n            ),\n            filterIcon: filtered => (\n                <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n            ),\n            onFilter: (value, record) =>\n                record[dataIndex]\n                    .toString()\n                    .toLowerCase()\n                    .includes(value.toLowerCase()),\n            onFilterDropdownVisibleChange: visible => {\n                if (visible) {\n                    setTimeout(() => { searchInput.current.select() });\n                }\n            },\n        }\n    }\n    function handleSearch(selectedKeys, confirm) {\n        confirm()\n        setSearchText(selectedKeys[0])\n    }\n\n    function handleReset(clearFilters) {\n        clearFilters()\n        setSearchText('')\n    }\n\n    useEffect(() => {\n        buscarRecurso()\n\n        const cols = []\n\n        columns.map(col => {\n            if (col.hidden)\n                return false;\n\n            if (col.filterSearch) {\n                cols.push({ ...col, ...getColumnSearchProps(col.dataIndex) })\n            } else {\n                cols.push({ ...col })\n            }\n        })\n        setDataColumns(cols)\n    }, [])\n\n    useEffect(() => {\n        if (reload) {\n            buscarRecurso();\n            handleReload(false);\n        }\n    },[reload])\n\n    return (\n        <ConfigProvider renderEmpty={() => <Empty description=\"Sem dados para exibir\" />} >\n            <Table\n                columns={dataColumns}\n                rowKey={record => record.id}\n                dataSource={data}\n                pagination={pagination}\n                loading={loading}\n                onChange={handleTableChange}\n                scroll={{ x: true }}\n                tableLayout=\"fixed\"\n                size=\"middle\"\n            />\n        </ConfigProvider>\n    )\n}\nexport default DataTable\n","import React, { useState } from 'react'\r\n\r\nimport { Button, Icon, PageHeader, Modal, message } from 'antd'\r\nimport { Header } from '../../shared/styles'\r\nimport FormGrupos from './form'\r\nimport { ContentLight, ContentTransparent } from '../../shared/components/Content'\r\nimport DataTable from '../../shared/components/dataTable'\r\nimport { TableIcon } from '../../shared/styles/index'\r\nimport api from '../../services'\r\n\r\nconst { confirm } = Modal\r\n\r\nconst Grupos = ({ history }) => {\r\n    const [reload, setReload] = useState(false);\r\n    const [cadastroVisible, setCadastroVisible] = useState(false);\r\n    const [idGrupo, setIdGrupo] = useState(null);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Nome',\r\n            dataIndex: 'nome',\r\n        },\r\n        {\r\n            title: 'Responsável',\r\n            dataIndex: 'responsavel',\r\n        },\r\n        {\r\n            title: '',\r\n            dataIndex: '',\r\n            render: value => <TableIcon type={'edit'} onClick={() => setIdGrupo(value._id)} />,\r\n            fixed: 'right',\r\n            width: '1%'\r\n        },\r\n        {\r\n            title: '',\r\n            dataIndex: '',\r\n            render: value => <TableIcon theme=\"twoTone\" twoToneColor=\"#ff0000\" type={'delete'} onClick={() => excluirGrupo(value._id) } />,\r\n            fixed: 'right',\r\n            width: 1\r\n        },\r\n    ]\r\n\r\n    function excluirGrupo(id) {\r\n        confirm({\r\n            title: 'Confirmar',\r\n            content: `Deseja realmente excluir este Grupo de Campo?`,\r\n            okText: \"Sim\",\r\n            cancelText: \"Não\",\r\n            onOk() {\r\n                async function deletar() {\r\n                    const response = await api.delete(`grupos/${id}`)\r\n\r\n                    if (response) {\r\n                        message.success('Grupo de Campo excluído!')\r\n                        setReload(true)\r\n                    }\r\n                }\r\n                deletar()\r\n            }, onCancel() { }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ContentTransparent>\r\n            <Header>\r\n                <PageHeader style={{ padding: 0 }} title=\"Grupos\" />\r\n                <Button type=\"primary\" onClick={() => setCadastroVisible(true)}>Novo grupo<Icon type=\"arrow-right\" /></Button>\r\n            </Header>\r\n            <ContentLight>\r\n                <DataTable \r\n                    reload={reload}\r\n                    handleReload={(r) => setReload(r)}\r\n                    columns={columns}\r\n                    recurso=\"grupos\"/>\r\n            </ContentLight>\r\n            <FormGrupos\r\n                grupo={idGrupo}\r\n                handleVisible={(status, reload, recurso) => {\r\n                    setCadastroVisible(status)\r\n                    setReload(reload)\r\n                    setIdGrupo(recurso)\r\n                }}\r\n                visible={cadastroVisible}/>\r\n        </ContentTransparent>\r\n    )\r\n}\r\n\r\nexport default Grupos\r\n","import * as Yup from 'yup'\n\nconst Schema = Yup.object().shape({\n    nome: Yup.string().required('Informe seu nome!'),\n    data_nascimentoM: Yup.date().required('Informe a Data de Nascimento!'),\n    id_grupo: Yup.string().required('Informe um Grupo de Campo')\n})\n\nexport default Schema","import React from 'react'\nimport { DatePicker } from 'antd'\nimport locale from 'antd/es/date-picker/locale/pt_BR'\nimport 'moment/locale/pt-br'\n\nconst { MonthPicker } = DatePicker;\n\nexport const DatePickerSimple = ({ handleChange, handleBlur, field, ...props }) => {\n\n    function onChange(date, dateString) {\n        const dt = date ? date.format() : ''\n\n        handleChange(dt, date)\n    }\n\n    return (\n        <DatePicker\n            {...field}\n            {...props}\n            locale={locale}\n            onChange={onChange}\n            format=\"DD/MM/YYYY\"\n            onBlur={(e) => {\n                props.form.setFieldTouched(field.name, true);\n                if (handleBlur)\n                    handleBlur(e.target.value)\n            }}\n            style={{ width: '100%' }}\n        />\n    )\n}\n\nexport const DatePickerMonth = ({ handleChange, handleBlur, field, ...props }) => {\n    function onChange(date, dateString) {\n        const dt = date ? date.format() : ''\n\n        handleChange(dt, date)\n    }\n\n    return (\n        <MonthPicker\n            {...field}\n            {...props}\n            locale={locale}\n            onChange={onChange}\n            format=\"MM/YYYY\"\n            onBlur={e => {\n                props.form.setFieldTouched(field.name, true);\n                if (handleBlur)\n                    handleBlur(e.target.value)\n            }}\n            style={{ width: '100%' }}\n        />\n    )\n}\n","import React from 'react'\r\nimport { Select } from 'antd'\r\n\r\nconst { Option } = Select\r\n\r\nconst SelectInput = ({ placeholder, options, onChange, ...props }) => {\r\n    \r\n    return (\r\n        <Select\r\n            {...props}\r\n            showSearch\r\n            onChange={onChange}\r\n            placeholder={placeholder}\r\n            optionFilterProp=\"children\"\r\n            filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0 }>\r\n            {options.map((option, index) => (\r\n                <Option value={option.value} key={index} >{option.label}</Option>\r\n            ))}\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport default SelectInput\r\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport api from '../../../services'\n\nimport { Row, Col, Button, Icon, Form, PageHeader, Spin, Modal, Drawer, message, Radio } from 'antd'\nimport { withFormik, Field, Form as FormFormik } from 'formik'\nimport { Header } from '../../../shared/styles'\nimport SchemaValidate from './validate'\nimport { ContentLight } from '../../../shared/components/Content'\nimport { InputText } from '../../../shared/form/DefaultInput'\nimport { DatePickerSimple } from '../../../shared/form/DatePickerSimple'\nimport Select from '../../../shared/form/Select'\nimport moment from 'moment'\n\nconst { confirm } = Modal\n\nconst FormPublicadores = ({ resetForm, values, setFieldValue, setValues, errors, touched, handleVisible, visible, publicador }) => {\n\n    const [loading, setLoading] = useState(false);\n    const [grupos, setGrupos] = useState([])\n\n    useEffect(() => {\n        async function buscarPublicador() {\n            if (publicador) {\n                setLoading(true)\n                handleVisible(true, false, publicador)\n\n                const response = await api.get(`publicadores/${publicador}`);\n\n                if (response) {\n                    const newValues = {\n                        ...response.data,\n                        data_nascimentoM: moment(response.data.data_nascimento.split('T')[0]),\n                        data_batismoM: response.data.data_batismo ? moment(response.data.data_batismo.split('T')[0]) : ''\n                    }\n                    setValues(newValues)\n                }\n                setLoading(false)\n            }\n        }\n\n        buscarPublicador();\n    }, [publicador])\n\n    async function getGrupos() {\n        const grupos = []\n        const resGrupos = await api.get(`grupos`)\n\n        if (resGrupos) {\n            resGrupos.data.map(grp => { grupos.push({ value: grp._id, label: grp.nome }) })\n            setGrupos(grupos)\n        }\n    }\n\n    useEffect(() => {\n        getGrupos()\n    }, [])\n\n    function closeDrawer(checkClose = true) {\n        if (checkClose) {\n            confirm({\n                title: 'Confirmar',\n                content: `Você perderá as alterações. Deseja realmente fechar?`,\n                okText: \"Sim\",\n                cancelText: \"Não\",\n                onOk() {\n                    resetForm()\n                    handleVisible(false, false)\n                },\n                onCancel() { }\n            })\n        } else {\n            resetForm()\n            handleVisible(false, false)\n        }\n    }\n\n    return (\n        <Drawer\n            destroyOnClose={true}\n            width=\"45%\"\n            placement='right'\n            closable={false}\n            onClose={() => closeDrawer()}\n            visible={visible}>\n            <Header>\n                <PageHeader style={{ padding: 0 }} onBack={() => closeDrawer(false)} title=\"Cadastro de Publicador\" />\n            </Header>\n            <ContentLight>\n                <Spin spinning={loading}>\n                    <FormFormik layout=\"vertical\">\n                        <Row gutter={30}>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Nome\"\n                                    validateStatus={(errors.nome && touched.nome) ? 'error' : ''}>\n                                    <Field\n                                        component={InputText}\n                                        name='nome'\n                                        placeholder='Nome'\n                                    />\n                                    {(errors.nome && touched.nome) && <span style={{ color: \"red\" }}>{errors.nome}</span>}\n                                </Form.Item>\n                            </Col>\n\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Status\">\n                                    <Radio.Group\n                                        name=\"status\"\n                                        value={values.status}\n                                        onChange={e => {\n                                            setFieldValue('status', e.target.value)\n                                        }}\n                                        buttonStyle=\"solid\">\n                                        <Radio.Button value=\"A\" >Ativo</Radio.Button>\n                                        <Radio.Button value=\"I\">Invativo</Radio.Button>\n                                    </Radio.Group>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row gutter={30}>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Data Nascimento\"\n                                    validateStatus={(errors.data_nascimentoM && touched.data_nascimentoM) ? 'error' : ''}>\n                                    <Field\n                                        component={DatePickerSimple}\n                                        name='data_nascimentoM'\n                                        placeholder='Nascimento'\n                                        handleChange={(date, dateM) => {\n                                            setFieldValue('data_nascimentoM', dateM)\n                                            setFieldValue('data_nascimento', date)\n                                        }}\n                                    />\n                                    {(errors.data_nascimentoM && touched.data_nascimentoM) && <span style={{ color: \"red\" }}>{errors.data_nascimentoM}</span>}\n                                </Form.Item>\n                            </Col>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Data Bastismo\">\n                                    <Field\n                                        component={DatePickerSimple}\n                                        name='data_batismoM'\n                                        placeholder='Batismo'\n                                        handleChange={(date, dateM) => {\n                                            setFieldValue('data_batismoM', dateM)\n                                            setFieldValue('data_batismo', date)\n                                        }}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter={30}>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Grupo de Campo\"\n                                    validateStatus={(errors.id_grupo && touched.id_grupo) ? 'error' : ''}>\n                                    <Select\n                                        name='id_grupo'\n                                        placeholder='Selecione um grupo'\n                                        value={values.id_grupo ? values.id_grupo : undefined}\n                                        options={grupos}\n                                        onChange={value => setFieldValue('id_grupo', value)}\n                                    />\n                                    {(errors.id_grupo && touched.id_grupo) && <span style={{ color: \"red\" }}>{errors.id_grupo}</span>}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter={30}>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Sexo\">\n                                    <Radio.Group\n                                        name=\"sexo\"\n                                        value={values.sexo}\n                                        onChange={e => {\n                                            setFieldValue('sexo', e.target.value)\n                                        }}\n                                        buttonStyle=\"solid\">\n                                        <Radio.Button value=\"M\" >Masculino</Radio.Button>\n                                        <Radio.Button value=\"F\">Feminino</Radio.Button>\n                                    </Radio.Group>\n                                </Form.Item>\n                            </Col>\n\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Grupo\">\n                                    <Radio.Group\n                                        name=\"grupo\"\n                                        value={values.grupo}\n                                        onChange={e => {\n                                            setFieldValue('grupo', e.target.value)\n                                        }}\n                                        buttonStyle=\"solid\">\n                                        <Radio.Button value=\"O\" >Outras Ovelhas</Radio.Button>\n                                        <Radio.Button value=\"U\">Ungidos</Radio.Button>\n                                    </Radio.Group>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter={30}>\n                            <Col xs={24} sm={24}>\n                                <Form.Item label=\"Privilégio\">\n                                    <Radio.Group\n                                        name=\"privilegio\"\n                                        value={values.privilegio}\n                                        onChange={e => {\n                                            setFieldValue('privilegio', e.target.value)\n                                        }}\n                                        buttonStyle=\"solid\">\n                                        <Radio.Button value=\"P\">Publicador</Radio.Button>\n                                        <Radio.Button value=\"R\">Pioneiro</Radio.Button>\n                                        <Radio.Button value=\"M\">Missionário</Radio.Button>\n                                        <Radio.Button value=\"S\">Servo Ministerial</Radio.Button>\n                                        <Radio.Button value=\"A\">Ancião</Radio.Button>\n                                    </Radio.Group>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col xs={24} sm={12}>\n                                <Form.Item style={{ marginBottom: 0 }}>\n                                    <Button type=\"primary\" htmlType=\"submit\">Salvar Publicador <Icon type=\"arrow-right\" /></Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </FormFormik>\n                </Spin>\n            </ContentLight>\n        </Drawer>\n    )\n}\n\nconst HandleFormPublicadores = withFormik({\n    mapPropsToValues: () => ({\n        sexo: 'M',\n        grupo: 'O',\n        status: 'A',\n        nome: '',\n        data_nascimento: '',\n        data_nascimentoM: moment(),\n        data_batismo: '',\n        data_batismoM: moment(),\n        id_grupo: '',\n        privilegio: 'P'\n    }),\n    validationSchema: SchemaValidate,\n\n    handleSubmit: async (values, { props: { publicador, handleVisible }, resetForm }) => {\n        confirm({\n            title: 'Confirmar',\n            content: `Deseja realmente salvar ${!publicador ? \"este\" : \"a edição deste\"} Publicador?`,\n            okText: \"Sim\",\n            cancelText: \"Não\",\n            onOk() {\n                async function salvarPublicador() {\n                    const idPublicador = publicador ? publicador : '';\n                    const method = idPublicador ? \"put\" : \"post\"\n\n                    const response = await api[method](`publicadores/${idPublicador}`, values)\n\n                    if (response) {\n                        message.success(`Publicador ${method === 'post' ? 'criado' : 'alterado'} com sucesso!`);\n\n                        resetForm()\n                        handleVisible(false, true)\n                    }\n                }\n\n                salvarPublicador()\n            }, onCancel() { }\n        });\n    },\n    displayName: 'PublicadoresForm'\n})(FormPublicadores)\n\nexport default withRouter(HandleFormPublicadores)\n","export const TipoMascara = {\n    cnpj: { regex: /^(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})$/g, replace: '$1.$2.$3/$4-$5' },\n    cpf: { regex: /^(\\d{3})(\\d{3})(\\d{3})(\\d{2})$/g, replace: '$1.$2.$3-$4' },\n    data: { regex: /^(\\d{4})-(\\d{2})-(\\d{2})$/g, replace: '$3/$2/$1' },\n    datahora: { regex: /^(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})$/g, replace: '$3/$2/$1 às $4:$5:$6' },\n    mesAno: { regex: /^(\\d{4})-(\\d{2})-(\\d{2})$/g, replace: '$2/$1'},\n    money: { regex: /(\\d)(?=(\\d{3})+(?!\\d))/g, replace: '$1.' }\n}","import React, { useState } from 'react'\n\nimport { Button, Icon, PageHeader, Modal, message, Tag } from 'antd'\nimport { Header } from '../../shared/styles'\nimport FormPublicadores from './form'\nimport { ContentLight, ContentTransparent } from '../../shared/components/Content'\nimport DataTable from '../../shared/components/dataTable'\nimport { TableIcon } from '../../shared/styles/index'\nimport { TipoMascara } from '../../enums'\nimport api from '../../services'\n\nconst { confirm } = Modal\n\nconst Publicadores = ({ history }) => {\n    const [reload, setReload] = useState(false);\n    const [cadastroVisible, setCadastroVisible] = useState(false);\n    const [idPublicador, setIdPublicador] = useState(null);\n\n    const columns = [\n        {\n            title: 'Nome',\n            dataIndex: 'nome',\n            width: '20%',\n        },\n        {\n            title: 'Batismo',\n            dataIndex: 'data_batismo',\n            render: v => `${v.split('T')[0].replace(TipoMascara.data.regex, TipoMascara.data.replace)}`\n        },\n        {\n            title: 'Privilégio',\n            dataIndex: 'privilegio',\n            render: status => \n                <Tag color={{\n                    'P': 'magenta',\n                    'R': 'volcano',\n                    'M': 'green',\n                    'S': 'geekblue',\n                    'A': 'purple'\n                 }[status]}>{{\n                    'P': 'Publicador',\n                    'R': 'Pioneiro',\n                    'M': 'Missionário',\n                    'S': 'Servo Ministerial',\n                    'A': 'Ancião' \n                 }[status]}</Tag>,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            render: status => <Tag color={status === 'A' ? 'green' : 'red'}>{status === 'A' ? 'Ativo' : 'Inativo'}</Tag>,\n        },\n        {\n            title: '',\n            dataIndex: '',\n            render: value => <TableIcon type={'edit'} onClick={() => setIdPublicador(value._id)} />,\n            fixed: 'right',\n            width: '1%'\n        },\n        {\n            title: '',\n            dataIndex: '',\n            render: value => <TableIcon theme=\"twoTone\" twoToneColor=\"#ff0000\" type={'delete'} onClick={() => excluirPublicador(value._id)} />,\n            fixed: 'right',\n            width: 1\n        },\n    ]\n\n    function excluirPublicador(id) {\n        confirm({\n            title: 'Confirmar',\n            content: `Deseja realmente excluir este Publicador?`,\n            okText: \"Sim\",\n            cancelText: \"Não\",\n            onOk() {\n                async function deletar() {\n                    const response = await api.delete(`publicadores/${id}`)\n\n                    if (response) {\n                        message.success('Publicador excluído!')\n                        setReload(true)\n                    }\n                }\n                deletar()\n            }, onCancel() { }\n        })\n    }\n\n    return (\n        <ContentTransparent>\n            <Header>\n                <PageHeader style={{ padding: 0 }} title=\"Publicadores\" />\n                <Button type=\"primary\" onClick={() => setCadastroVisible(true)}>Novo publicador<Icon type=\"arrow-right\" /></Button>\n            </Header>\n            <ContentLight>\n                <DataTable \n                    reload={reload}\n                    handleReload={(r) => setReload(r)}\n                    columns={columns}\n                    recurso=\"publicadores\"/>\n            </ContentLight>\n            <FormPublicadores\n                publicador={idPublicador}\n                handleVisible={(status, reload, recurso) => {\n                    setCadastroVisible(status)\n                    setReload(reload)\n                    setIdPublicador(recurso)\n                }}\n                visible={cadastroVisible}/>\n        </ContentTransparent>\n    )\n}\n\nexport default Publicadores\n","import * as Yup from 'yup'\n\nconst Schema = Yup.object().shape({\n    publicador: Yup.string().required('Informe seu nome!'),\n    mesAnoM: Yup.date().required('Informe a Mês/Ano!'),\n    horas: Yup.string().required('Informe o número de Horas!'),\n    publicacoes: Yup.string().required('Informe o número de Publicações!'),\n    videos: Yup.string().required('Informe o número de Vídeos!'),\n    revisitas: Yup.string().required('Informe o número de Revisitas!'),\n    estudos: Yup.string().required('Informe o número de Estudos!'),\n})\n\nexport default Schema","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport api from '../../../services'\n\nimport { Row, Col, Button, Icon, Form, PageHeader, Spin, Modal, Drawer, message, Radio } from 'antd'\nimport { withFormik, Field, Form as FormFormik } from 'formik'\nimport { Header } from '../../../shared/styles'\nimport SchemaValidate from './validate'\nimport { ContentLight } from '../../../shared/components/Content'\nimport { InputTextArea, InputNumber } from '../../../shared/form/DefaultInput'\nimport { DatePickerMonth } from '../../../shared/form/DatePickerSimple'\nimport Select from '../../../shared/form/Select'\nimport moment from 'moment'\n\nconst { confirm } = Modal\n\nconst FormRegistros = ({ resetForm, values, setFieldValue, setValues, errors, touched, handleVisible, visible, registro }) => {\n\n    const [loading, setLoading] = useState(false);\n    const [publicadores, setPublicadores] = useState([])\n\n    useEffect(() => {\n        async function buscarRegistro() {\n            if (registro) {\n                setLoading(true)\n                handleVisible(true, false, registro)\n\n                const response = await api.get(`registros/${registro}`);\n\n                if (response) {\n                    const newValues = {\n                        ...response.data,\n                        mesAnoM: moment(response.data.mesAno.split('T')[0]),\n                    }\n                    setValues(newValues)\n                }\n                setLoading(false)\n            }\n        }\n\n        buscarRegistro();\n    }, [registro])\n\n    async function getPublicadores() {\n        const publicadores = []\n        const resPublicadores = await api.get(`publicadores`)\n\n        if (resPublicadores) {\n            resPublicadores.data.map(pub => { publicadores.push({ value: pub._id, label: pub.nome }) })\n            setPublicadores(publicadores)\n        }\n    }\n\n    useEffect(() => {\n        getPublicadores()\n    }, [])\n\n    function closeDrawer(checkClose = true) {\n        if (checkClose) {\n            confirm({\n                title: 'Confirmar',\n                content: `Você perderá as alterações. Deseja realmente fechar?`,\n                okText: \"Sim\",\n                cancelText: \"Não\",\n                onOk() {\n                    resetForm()\n                    handleVisible(false, false)\n                },\n                onCancel() { }\n            })\n        } else {\n            resetForm()\n            handleVisible(false, false)\n        }\n    }\n\n    return (\n        <Drawer\n            destroyOnClose={true}\n            width=\"45%\"\n            placement='right'\n            closable={false}\n            onClose={() => closeDrawer()}\n            visible={visible}>\n            <Header>\n                <PageHeader style={{ padding: 0 }} onBack={() => closeDrawer(false)} title=\"Cadastro de Registro\" />\n            </Header>\n            <ContentLight>\n                <Spin spinning={loading}>\n                    <FormFormik layout=\"vertical\">\n\n                        <Row gutter={30}>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Publicador\"\n                                    validateStatus={(errors.publicador && touched.publicador) ? 'error' : ''}>\n                                    <Select\n                                        name='publicador'\n                                        placeholder='Selecione um publicador'\n                                        value={values.publicador ? values.publicador : undefined}\n                                        options={publicadores}\n                                        onChange={value => setFieldValue('publicador', value)}\n                                    />\n                                    {(errors.publicador && touched.publicador) && <span style={{ color: \"red\" }}>{errors.publicador}</span>}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row gutter={30}>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Mês/Ano\"\n                                    validateStatus={(errors.mesAnoM && touched.mesAnoM) ? 'error' : ''}>\n                                    <Field\n                                        component={DatePickerMonth}\n                                        name='mesAnoM'\n                                        placeholder='Mês/Ano'\n                                        handleChange={(date, dateM) => {\n                                            setFieldValue('mesAnoM', dateM)\n                                            setFieldValue('mesAno', date)\n                                        }}\n                                    />\n                                    {(errors.mesAnoM && touched.mesAnoM) && <span style={{ color: \"red\" }}>{errors.mesAnoM}</span>}\n                                </Form.Item>\n                            </Col>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Horas\"\n                                    validateStatus={(errors.horas && touched.horas) ? 'error' : ''}>\n                                    <Field\n                                        component={InputNumber}\n                                        name='horas'\n                                        placeholder='Horas'\n                                        handleChange={value => setFieldValue('horas', value)}\n                                    />\n                                    {(errors.horas && touched.horas) && <span style={{ color: \"red\" }}>{errors.horas}</span>}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row gutter={30}>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Publicações\"\n                                    validateStatus={(errors.publicacoes && touched.publicacoes) ? 'error' : ''}>\n                                    <Field\n                                        component={InputNumber}\n                                        name='publicacoes'\n                                        placeholder='Publicações'\n                                        handleChange={value => setFieldValue('publicacoes', value)}\n                                    />\n                                    {(errors.publicacoes && touched.publicacoes) && <span style={{ color: \"red\" }}>{errors.publicacoes}</span>}\n                                </Form.Item>\n                            </Col>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Vídeos\"\n                                    validateStatus={(errors.videos && touched.videos) ? 'error' : ''}>\n                                    <Field\n                                        component={InputNumber}\n                                        name='videos'\n                                        placeholder='Vídeos'\n                                        handleChange={value => setFieldValue('videos', value)}\n                                    />\n                                    {(errors.videos && touched.videos) && <span style={{ color: \"red\" }}>{errors.videos}</span>}\n                                </Form.Item>\n                            </Col>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Revisitas\"\n                                    validateStatus={(errors.revisitas && touched.revisitas) ? 'error' : ''}>\n                                    <Field\n                                        component={InputNumber}\n                                        name='revisitas'\n                                        placeholder='Revisitas'\n                                        handleChange={value => setFieldValue('revisitas', value)}\n                                    />\n                                    {(errors.revisitas && touched.revisitas) && <span style={{ color: \"red\" }}>{errors.revisitas}</span>}\n                                </Form.Item>\n                            </Col>\n                            <Col xs={24} sm={12}>\n                                <Form.Item label=\"Estudos\"\n                                    validateStatus={(errors.estudos && touched.estudos) ? 'error' : ''}>\n                                    <Field\n                                        component={InputNumber}\n                                        name='estudos'\n                                        placeholder='Estudos'\n                                        handleChange={value => setFieldValue('estudos', value)}\n                                    />\n                                    {(errors.estudos && touched.estudos) && <span style={{ color: \"red\" }}>{errors.estudos}</span>}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter={30}>\n                            <Col xs={24} sm={24}>\n                                <Form.Item label=\"Observação\">\n                                    <Field\n                                        component={InputTextArea}\n                                        name='obj'\n                                        rows={3}\n                                        maxLength={200}\n                                        placeholder='Observação'\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col xs={24} sm={12}>\n                                <Form.Item style={{ marginBottom: 0 }}>\n                                    <Button type=\"primary\" htmlType=\"submit\">Salvar Publicador <Icon type=\"arrow-right\" /></Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </FormFormik>\n                </Spin>\n            </ContentLight>\n        </Drawer>\n    )\n}\n\nconst HandleFormRegistros = withFormik({\n    mapPropsToValues: () => ({\n        mesAnoM: moment(),\n        mesAno: '',\n        publicacoes: '0',\n        videos: '0',\n        horas: '0',\n        revisitas: '0',\n        estudos: '0',\n        obs: '',\n        publicador: '',\n    }),\n    validationSchema: SchemaValidate,\n\n    handleSubmit: async (values, { props: { registro, handleVisible }, resetForm }) => {\n        confirm({\n            title: 'Confirmar',\n            content: `Deseja realmente salvar ${!registro ? \"este\" : \"a edição deste\"} Registro?`,\n            okText: \"Sim\",\n            cancelText: \"Não\",\n            onOk() {\n                async function salvarRegistro() {\n                    const idRegistro = registro ? registro : '';\n                    const method = idRegistro ? \"put\" : \"post\"\n\n                    const response = await api[method](`registros/${idRegistro}`, values)\n\n                    if (response) {\n                        message.success(`Registro ${method === 'post' ? 'criado' : 'alterado'} com sucesso!`);\n\n                        resetForm()\n                        handleVisible(false, true)\n                    }\n                }\n\n                salvarRegistro()\n            }, onCancel() { }\n        });\n    },\n    displayName: 'RegistrosForm'\n})(FormRegistros)\n\nexport default withRouter(HandleFormRegistros)\n","import React, { useState } from 'react'\n\nimport { Button, Icon, PageHeader, Modal, message, Tag } from 'antd'\nimport { Header } from '../../shared/styles'\nimport FormRegistros from './form'\nimport { ContentLight, ContentTransparent } from '../../shared/components/Content'\nimport DataTable from '../../shared/components/dataTable'\nimport { TableIcon } from '../../shared/styles/index'\nimport { TipoMascara } from '../../enums'\nimport api from '../../services'\n\nconst { confirm } = Modal\n\nconst Registros = ({ history }) => {\n    const [reload, setReload] = useState(false);\n    const [cadastroVisible, setCadastroVisible] = useState(false);\n    const [idRegistro, setIdRegistro] = useState(null);\n\n    const columns = [\n        {\n            title: 'Publicador',\n            dataIndex: 'publicador.nome',\n            width: '20%',\n        },\n        {\n            title: 'Mês/Ano',\n            dataIndex: 'mesAno',\n            width: '20%',\n            render: v => `${v.split('T')[0].replace(TipoMascara.mesAno.regex, TipoMascara.mesAno.replace)}`\n        },\n        {\n            title: 'Horas',\n            dataIndex: 'horas',\n            width: '20%',\n        },\n        {\n            title: 'Publicações',\n            dataIndex: 'publicacoes',\n            width: '20%',\n        },\n        {\n            title: 'Vídeos',\n            dataIndex: 'videos',\n            width: '20%',\n        },\n        {\n            title: 'Revisitas',\n            dataIndex: 'revisitas',\n            width: '20%',\n        },\n        {\n            title: 'Estudos',\n            dataIndex: 'estudos',\n            width: '20%',\n        },\n        {\n            title: '',\n            dataIndex: '',\n            render: value => <TableIcon type={'edit'} onClick={() => setIdRegistro(value._id)} />,\n            fixed: 'right',\n            width: '1%'\n        },\n        {\n            title: '',\n            dataIndex: '',\n            render: value => <TableIcon theme=\"twoTone\" twoToneColor=\"#ff0000\" type={'delete'} onClick={() => excluirRegistro(value._id)} />,\n            fixed: 'right',\n            width: 1\n        },\n    ]\n\n    function excluirRegistro(id) {\n        confirm({\n            title: 'Confirmar',\n            content: `Deseja realmente excluir este Registro?`,\n            okText: \"Sim\",\n            cancelText: \"Não\",\n            onOk() {\n                async function deletar() {\n                    const response = await api.delete(`registros/${id}`)\n\n                    if (response) {\n                        message.success('Registro excluído!')\n                        setReload(true)\n                    }\n                }\n                deletar()\n            }, onCancel() { }\n        })\n    }\n\n    return (\n        <ContentTransparent>\n            <Header>\n                <PageHeader style={{ padding: 0 }} title=\"Registros\" />\n                <Button type=\"primary\" onClick={() => setCadastroVisible(true)}>Novo registro<Icon type=\"arrow-right\" /></Button>\n            </Header>\n            <ContentLight>\n                <DataTable \n                    reload={reload}\n                    handleReload={(r) => setReload(r)}\n                    columns={columns}\n                    recurso=\"registros\"/>\n            </ContentLight>\n            <FormRegistros\n                registro={idRegistro}\n                handleVisible={(status, reload, recurso) => {\n                    setCadastroVisible(status)\n                    setReload(reload)\n                    setIdRegistro(recurso)\n                }}\n                visible={cadastroVisible}/>\n        </ContentTransparent>\n    )\n}\n\nexport default Registros\n","import * as Yup from 'yup'\r\n\r\nconst Schema = Yup.object().shape({\r\n    name: Yup.string().required('Informe o nome do usuário!'),\r\n    email: Yup.string().required('Informe o email do usuário!')\r\n})\r\n\r\nexport default Schema","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport api from '../../../services'\nimport SchemaValidate from './validate'\n\nimport { Row, Col, Button, Icon, Form, PageHeader, Spin, Modal, Drawer, message } from 'antd'\nimport { withFormik, Field, Form as FormFormik, ErrorMessage } from 'formik'\nimport { Header } from '../../../shared/styles'\nimport { ContentLight } from '../../../shared/components/Content'\nimport { InputText } from '../../../shared/form/DefaultInput'\n\nconst { confirm } = Modal\n\nconst FormUsuarios = ({ setFieldValue, values, resetForm, setValues, errors, touched, handleVisible, visible, usuario }) => {\n\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        async function buscarUsuario() {\n            if (usuario) {\n                setLoading(true)\n                handleVisible(true, false, usuario)\n\n                const response = await api.get(`users/${usuario}`);\n\n                if (response) {\n                    setValues({ name: response.data.name, email: response.data.email })\n                }\n                setLoading(false)\n            }\n        }\n\n        buscarUsuario();\n    }, [usuario])\n\n    function closeDrawer(checkClose = true) {\n        if (checkClose) {\n            confirm({\n                title: 'Confirmar',\n                content: `Você perderá as alterações. Deseja realmente fechar?`,\n                okText: \"Sim\",\n                cancelText: \"Não\",\n                onOk() {\n                    resetForm()\n                    handleVisible(false, false)\n                },\n                onCancel() { }\n            })\n        } else {\n            resetForm()\n            handleVisible(false, false)\n        }\n    }\n\n    return (\n        <Drawer\n            destroyOnClose={true}\n            width=\"45%\"\n            placement='right'\n            closable={false}\n            onClose={() => closeDrawer()}\n            visible={visible}>\n            <Header>\n                <PageHeader style={{ padding: 0 }} onBack={() => closeDrawer(false)} title=\"Cadastro de Usuários\" />\n            </Header>\n            <ContentLight>\n                <Spin spinning={loading}>\n                    <FormFormik layout=\"vertical\">\n                        <Row gutter={30}>\n                            <Col xs={24} sm={24}>\n                                <Form.Item label=\"Nome\"\n                                    validateStatus={(errors.name && touched.name) ? 'error' : ''}>\n                                    <Field\n                                        component={InputText}\n                                        name='name'\n                                        placeholder='Nome'\n                                    />\n                                    {(errors.name && touched.name) && <span style={{ color: \"red\" }}>{errors.name}</span>}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Row gutter={30}>\n                            <Col xs={24} sm={24}>\n                                <Form.Item label=\"Email\"\n                                    validateStatus={(errors.email && touched.email) ? 'error' : ''}>\n                                    <Field\n                                        component={InputText}\n                                        name='email'\n                                        placeholder='Email'\n                                    />\n                                    {(errors.email && touched.email) && <span style={{ color: \"red\" }}>{errors.email}</span>}\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col xs={24} sm={12}>\n                                <Form.Item style={{ marginBottom: 0 }}>\n                                    <Button type=\"primary\" htmlType=\"submit\">Salvar Usuário <Icon type=\"arrow-right\" /></Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </FormFormik>\n                </Spin>\n            </ContentLight>\n        </Drawer>\n    )\n}\n\nconst HandleFormUsuarios = withFormik({\n    mapPropsToValues: () => ({ name: '', email: '' }),\n    validationSchema: SchemaValidate,\n\n    handleSubmit: async (values, { props: { usuario, handleVisible }, resetForm }) => {\n        confirm({\n            title: 'Confirmar',\n            content: `Deseja realmente salvar ${!usuario ? \"este\" : \"a edição deste\"} Código de Liberação?`,\n            okText: \"Sim\",\n            cancelText: \"Não\",\n            onOk() {\n                async function salvarUsuario() {\n                    const idUser = usuario ? usuario : '';\n                    const method = idUser ? \"put\" : \"post\"\n\n                    const response = await api[method](`users/${idUser}`, values)\n\n                    if (response) {\n                        message.success(`Usuário ${method === 'post' ? 'criado' : 'alterado'} com sucesso!`);\n\n                        resetForm()\n                        handleVisible(false, true)\n                    }\n                }\n\n                salvarUsuario()\n            }, onCancel() { }\n        });\n    },\n    displayName: 'UsuariosForm'\n})(FormUsuarios)\n\nexport default withRouter(HandleFormUsuarios)\n","import React, { useState } from 'react'\n\nimport { Button, Icon, PageHeader, Modal, message } from 'antd'\nimport { Header, Title } from '../../shared/styles'\nimport FormUsuarios from './form'\nimport { ContentLight, ContentTransparent } from '../../shared/components/Content'\nimport DataTable from '../../shared/components/dataTable'\nimport { TableIcon } from '../../shared/styles/index'\nimport api from '../../services'\n\nconst { confirm } = Modal\n\nconst Usuarios = () => {\n    const [reload, setReload] = useState(false);\n    const [cadastroVisible, setCadastroVisible] = useState(false);\n    const [idUser, setIdUser] = useState(null);\n\n    const columns = [\n        {\n            title: 'Nome',\n            dataIndex: 'name',\n            width: '20%',\n        },\n        {\n            title: 'E-mail',\n            dataIndex: 'email',\n        },\n        {\n            title: '',\n            dataIndex: '',\n            render: value => <TableIcon type={'edit'} onClick={() => setIdUser(value._id)} />,\n            fixed: 'right',\n            width: '1%'\n        }\n    ]\n\n    return (\n        <ContentTransparent>    \n            <Header>\n                <PageHeader style={{ padding: 0 }} title=\"Usuários\" />\n                <Button type=\"primary\" onClick={() => setCadastroVisible(true)}>Novo usuário<Icon type=\"arrow-right\" /></Button>\n            </Header>\n            <ContentLight>\n                <DataTable \n                    reload={reload}\n                    handleReload={(r) => setReload(r)}\n                    columns={columns}\n                    recurso=\"users\"/>\n            </ContentLight>\n            <FormUsuarios\n                usuario={idUser}\n                handleVisible={(status, reload, recurso) => {\n                    setCadastroVisible(status)\n                    setReload(reload)\n                    setIdUser(recurso)\n                }}\n                visible={cadastroVisible}/>\n        </ContentTransparent>\n    )\n}\n\nexport default Usuarios\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport PrivateRoute from '../../shared/commons/PrivateRoute'\r\n\r\nimport Layout from '../_layout'\r\nimport { MainLayout } from '../_layout/styles'\r\nimport Login from '../login'\r\nimport Home from '../home'\r\n\r\nimport Grupos from '../grupos'\r\nimport Publicadores from '../publicadores'\r\nimport Registros from '../registros'\r\nimport Usuarios from '../usuarios'\r\n\r\nconst Pages = () => (\r\n    <Switch>\r\n        <Route exact path=\"/grupos\" component={Grupos} />\r\n        <Route exact path=\"/publicadores\" component={Publicadores} />\r\n        <Route exact path=\"/registros\" component={Registros} />\r\n        <Route exact path=\"/usuarios\" component={Usuarios} />\r\n    </Switch>\r\n)\r\n\r\nconst wrappedRoutes = () => (\r\n    <MainLayout>\r\n        <Layout>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/\" component={Pages} />\r\n        </Layout>\r\n    </MainLayout>\r\n)\r\n\r\nconst Routes = () => (\r\n    <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <PrivateRoute path=\"/\" component={wrappedRoutes} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n)\r\n\r\nexport default Routes","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { TOGGLE_COLLAPSED } from './topbarActions'\r\n\r\nconst INITIAL_STATE = { collapse: false }\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case TOGGLE_COLLAPSED:\r\n            return { ...state, collapse: !state.collapse }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport topbarReducer from '../_layout/Topbar/topReducers'\r\n\r\nconst rootReducer = combineReducers({\r\n    topbar: topbarReducer,\r\n})\r\n\r\nexport default rootReducer","import React from 'react'\n\nimport * as serviceWorker from './serviceWorker'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { applyMiddleware, createStore } from 'redux'\nimport multi from 'redux-multi'\nimport thunk from 'redux-thunk'\n\nimport App from './containers/_app/App'\nimport reducers from './containers/_app/reducers'\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\nconst store = applyMiddleware(multi, thunk)(createStore)(reducers, devTools)\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}